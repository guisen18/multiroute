#!/bin/bash
#1.      建立ETH0隧道和ETH1隧道，报文打标签，链路跟踪下与报文保持打相同标签

iptables -t mangle -N ETH0

iptables -t mangle -A ETH0 -j MARK --set-mark 5

iptables -t mangle -A ETH0 -j CONNMARK --save-mark

iptables -t mangle -N ETH1

iptables -t mangle -A ETH1 -j MARK --set-mark 6

iptables -t mangle -A ETH1 -j CONNMARK --save-mark



#2.      设置源来自内网网卡的报文每2个分别进入步骤1建立的隧道

iptables -t mangle -A OUTPUT -s 192.168.0.0/24 -m state --state NEW -m statistic --mode nth --every 2 --packet 0 -j ETH0

iptables -t mangle -A OUTPUT -s 192.168.0.0/24 -m state --state NEW -m statistic --mode nth --every 2 --packet 1 -j ETH1



#3.      设置链路跟踪生效

iptables -t mangle -A OUTPUT -s 192.168.0.0/24 -m state --state ESTABLISHED,RELATED -j CONNMARK --restore-mark



#4.      设置规则报文带标签5命中table100的路由，标签6命中table101 路由

ip rule add fwmark 0x5 table 100

ip rule add fwmark 0x6 table 101



#5.      设置路由分别从不同的网卡去网关

ip route add table 100 default via 192.168.1.1 dev eth1

ip route add table 101 default via 192.168.1.1 dev eth2



#6.      （可选）设置路由保留内网网卡内网2层通讯可用。也可以加其他内网路由规则

#ip route add 192.168.0.0/24 dev eth0 table 100

#ip route add 192.168.0.0/24 dev eth0 table 101



#7.      设置从内网IP到eth0/eth1 的报文分别做SNAT转对应网卡上的IP地址

iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth1 -j MASQUERADE

iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth2 -j MASQUERADE



#8.      设置虚拟机OS, IP MAC 不校验，使SNAT报文返回生效。

echo 0 > /proc/sys/net/ipv4/conf/default/rp_filter

echo 0 > /proc/sys/net/ipv4/conf/all/rp_filter

echo 0 > /proc/sys/net/ipv4/conf/eth0/rp_filter

echo 0 > /proc/sys/net/ipv4/conf/eth1/rp_filter

echo 0 > /proc/sys/net/ipv4/conf/eth2/rp_filter

